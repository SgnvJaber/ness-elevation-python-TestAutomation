{"name": "Verify Calculation", "status": "failed", "statusDetails": {"message": "Failed: An error has occurred...see details:", "trace": "self = <selenium_automation.lesson03.super_calculator_v2.Test_Super_Calculator_V2 object at 0x000001809DE9BCD0>\n\n    @allure.title(\"Verify Calculation\")\n    @allure.description(\"The function will keep calculating until provided number\")\n    def test_calculate(self):\n        try:\n>           self.calculate(max)\n\nlesson03\\super_calculator_v2.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\na = (<selenium_automation.lesson03.super_calculator_v2.Test_Super_Calculator_V2 object at 0x000001809DE9BCD0>, '3'), kw = {}, __tracebackhide__ = True\nparams = OrderedDict([('max_number', \"'3'\")])\nargs = ['<selenium_automation.lesson03.super_calculator_v2.Test_Super_Calculator_V2 object at 0x000001809DE9BCD0>', \"'3'\"]\n\n    @wraps(func)\n    def impl(*a, **kw):\n        __tracebackhide__ = True\n        params = func_parameters(func, *a, **kw)\n        args = list(map(lambda x: represent(x), a))\n        with StepContext(self.title.format(*args, **params), params):\n>           return func(*a, **kw)\n\n..\\venv\\lib\\site-packages\\allure_commons\\_allure.py:172: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium_automation.lesson03.super_calculator_v2.Test_Super_Calculator_V2 object at 0x000001809DE9BCD0>, max_number = '3'\n\n    @allure.step(\"Calculate until provided number\")\n    def calculate(self, max_number):\n        self.navigate_to_iframe()\n        self.generate_random_number(min, max_number)\n>       random = self.get_random_number() - 1\n\nlesson03\\super_calculator_v2.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\na = (<selenium_automation.lesson03.super_calculator_v2.Test_Super_Calculator_V2 object at 0x000001809DE9BCD0>,), kw = {}, __tracebackhide__ = True\nparams = OrderedDict(), args = ['<selenium_automation.lesson03.super_calculator_v2.Test_Super_Calculator_V2 object at 0x000001809DE9BCD0>']\n\n    @wraps(func)\n    def impl(*a, **kw):\n        __tracebackhide__ = True\n        params = func_parameters(func, *a, **kw)\n        args = list(map(lambda x: represent(x), a))\n        with StepContext(self.title.format(*args, **params), params):\n>           return func(*a, **kw)\n\n..\\venv\\lib\\site-packages\\allure_commons\\_allure.py:172: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium_automation.lesson03.super_calculator_v2.Test_Super_Calculator_V2 object at 0x000001809DE9BCD0>\n\n    @allure.step(\"Store the Random Number\")\n    def get_random_number(self):\n>       rand = driver.find_element(By.XPATH,\"//center/span[1]\").text\n\nlesson03\\super_calculator_v2.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fb753a28b22494f0a9f29746fa7c1ae4\")>, by = 'xpath', value = '//center/span[1]'\n\n    def find_element(self, by=By.ID, value=None) -> WebElement:\n        \"\"\"\n        Find an element given a By strategy and locator.\n    \n        :Usage:\n            ::\n    \n                element = driver.find_element(By.ID, 'foo')\n    \n        :rtype: WebElement\n        \"\"\"\n        if isinstance(by, RelativeBy):\n            return self.find_elements(by=by, value=value)[0]\n    \n        if by == By.ID:\n            by = By.CSS_SELECTOR\n            value = '[id=\"%s\"]' % value\n        elif by == By.TAG_NAME:\n            by = By.CSS_SELECTOR\n        elif by == By.CLASS_NAME:\n            by = By.CSS_SELECTOR\n            value = \".%s\" % value\n        elif by == By.NAME:\n            by = By.CSS_SELECTOR\n            value = '[name=\"%s\"]' % value\n    \n>       return self.execute(Command.FIND_ELEMENT, {\n            'using': by,\n            'value': value})['value']\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fb753a28b22494f0a9f29746fa7c1ae4\")>, driver_command = 'findElement'\nparams = {'using': 'xpath', 'value': '//center/span[1]'}\n\n    def execute(self, driver_command: str, params: dict = None) -> dict:\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        if self.session_id:\n            if not params:\n                params = {'sessionId': self.session_id}\n            elif 'sessionId' not in params:\n                params['sessionId'] = self.session_id\n    \n        params = self._wrap_value(params)\n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001809DE9BCA0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77897A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77897A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//center/span[1]\"}\nE         (Session info: chrome=96.0.4664.93)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x01266903+2517251]\nE       \tOrdinal0 [0x011FF8E1+2095329]\nE       \tOrdinal0 [0x01102848+1058888]\nE       \tOrdinal0 [0x0112D448+1233992]\nE       \tOrdinal0 [0x0112D63B+1234491]\nE       \tOrdinal0 [0x01157812+1406994]\nE       \tOrdinal0 [0x0114650A+1336586]\nE       \tOrdinal0 [0x01155BBF+1399743]\nE       \tOrdinal0 [0x0114639B+1336219]\nE       \tOrdinal0 [0x011227A7+1189799]\nE       \tOrdinal0 [0x01123609+1193481]\nE       \tGetHandleVerifier [0x013F5904+1577972]\nE       \tGetHandleVerifier [0x014A0B97+2279047]\nE       \tGetHandleVerifier [0x012F6D09+534521]\nE       \tGetHandleVerifier [0x012F5DB9+530601]\nE       \tOrdinal0 [0x01204FF9+2117625]\nE       \tOrdinal0 [0x012098A8+2136232]\nE       \tOrdinal0 [0x012099E2+2136546]\nE       \tOrdinal0 [0x01213541+2176321]\nE       \tBaseThreadInitThunk [0x7627FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77897A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77897A6E+238]\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <selenium_automation.lesson03.super_calculator_v2.Test_Super_Calculator_V2 object at 0x000001809DE9BCD0>\n\n    @allure.title(\"Verify Calculation\")\n    @allure.description(\"The function will keep calculating until provided number\")\n    def test_calculate(self):\n        try:\n            self.calculate(max)\n            self.print_result()\n        except Exception as e:\n            self.attach_file()\n>           pytest.fail(\"An error has occurred...see details:\", e)\nE           Failed: An error has occurred...see details:\n\nlesson03\\super_calculator_v2.py:41: Failed"}, "description": "The function will keep calculating until provided number", "steps": [{"name": "Calculate until provided number", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//center/span[1]\"}\n  (Session info: chrome=96.0.4664.93)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x01266903+2517251]\n\tOrdinal0 [0x011FF8E1+2095329]\n\tOrdinal0 [0x01102848+1058888]\n\tOrdinal0 [0x0112D448+1233992]\n\tOrdinal0 [0x0112D63B+1234491]\n\tOrdinal0 [0x01157812+1406994]\n\tOrdinal0 [0x0114650A+1336586]\n\tOrdinal0 [0x01155BBF+1399743]\n\tOrdinal0 [0x0114639B+1336219]\n\tOrdinal0 [0x011227A7+1189799]\n\tOrdinal0 [0x01123609+1193481]\n\tGetHandleVerifier [0x013F5904+1577972]\n\tGetHandleVerifier [0x014A0B97+2279047]\n\tGetHandleVerifier [0x012F6D09+534521]\n\tGetHandleVerifier [0x012F5DB9+530601]\n\tOrdinal0 [0x01204FF9+2117625]\n\tOrdinal0 [0x012098A8+2136232]\n\tOrdinal0 [0x012099E2+2136546]\n\tOrdinal0 [0x01213541+2176321]\n\tBaseThreadInitThunk [0x7627FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77897A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77897A6E+238]\n\n", "trace": "  File \"c:\\automation\\python\\test_automation\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Automation\\Python\\test_automation\\selenium_automation\\lesson03\\super_calculator_v2.py\", line 47, in calculate\n    random = self.get_random_number() - 1\n  File \"c:\\automation\\python\\test_automation\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Automation\\Python\\test_automation\\selenium_automation\\lesson03\\super_calculator_v2.py\", line 67, in get_random_number\n    rand = driver.find_element(By.XPATH,\"//center/span[1]\").text\n  File \"c:\\automation\\python\\test_automation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1244, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"c:\\automation\\python\\test_automation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 424, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\automation\\python\\test_automation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Navigate inside the iframe", "status": "passed", "start": 1639485249199, "stop": 1639485249222}, {"name": "Generate Random Number", "status": "passed", "parameters": [{"name": "min_number", "value": "'5'"}, {"name": "max_number", "value": "'3'"}], "start": 1639485249222, "stop": 1639485249371}, {"name": "Store the Random Number", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//center/span[1]\"}\n  (Session info: chrome=96.0.4664.93)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x01266903+2517251]\n\tOrdinal0 [0x011FF8E1+2095329]\n\tOrdinal0 [0x01102848+1058888]\n\tOrdinal0 [0x0112D448+1233992]\n\tOrdinal0 [0x0112D63B+1234491]\n\tOrdinal0 [0x01157812+1406994]\n\tOrdinal0 [0x0114650A+1336586]\n\tOrdinal0 [0x01155BBF+1399743]\n\tOrdinal0 [0x0114639B+1336219]\n\tOrdinal0 [0x011227A7+1189799]\n\tOrdinal0 [0x01123609+1193481]\n\tGetHandleVerifier [0x013F5904+1577972]\n\tGetHandleVerifier [0x014A0B97+2279047]\n\tGetHandleVerifier [0x012F6D09+534521]\n\tGetHandleVerifier [0x012F5DB9+530601]\n\tOrdinal0 [0x01204FF9+2117625]\n\tOrdinal0 [0x012098A8+2136232]\n\tOrdinal0 [0x012099E2+2136546]\n\tOrdinal0 [0x01213541+2176321]\n\tBaseThreadInitThunk [0x7627FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77897A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77897A6E+238]\n\n", "trace": "  File \"c:\\automation\\python\\test_automation\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Automation\\Python\\test_automation\\selenium_automation\\lesson03\\super_calculator_v2.py\", line 67, in get_random_number\n    rand = driver.find_element(By.XPATH,\"//center/span[1]\").text\n  File \"c:\\automation\\python\\test_automation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1244, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"c:\\automation\\python\\test_automation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 424, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\automation\\python\\test_automation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1639485249371, "stop": 1639485249377}], "parameters": [{"name": "max_number", "value": "'3'"}], "start": 1639485249199, "stop": 1639485249378}, {"name": "Attaching a screenshot to the report", "status": "passed", "attachments": [{"source": "5e2ba972-6916-463b-a7ab-8743f4f98a27-attachment.png", "type": "image/png"}], "start": 1639485249378, "stop": 1639485249513}], "attachments": [{"name": "log", "source": "af7f8291-d63d-45d0-9a67-ee2986026b72-attachment.txt", "type": "text/plain"}], "start": 1639485249199, "stop": 1639485249513, "uuid": "d0ba6d00-18cd-48ee-88bd-7ded9784fd12", "historyId": "38d9e6c3d8fee6c5bda1b8656124b340", "testCaseId": "cb0f3a011feb18e5a7d198933ecb5b12", "fullName": "lesson03.super_calculator_v2.Test_Super_Calculator_V2#test_calculate", "labels": [{"name": "parentSuite", "value": "lesson03"}, {"name": "suite", "value": "super_calculator_v2"}, {"name": "subSuite", "value": "Test_Super_Calculator_V2"}, {"name": "host", "value": "DESKTOP-LVSINNE"}, {"name": "thread", "value": "2476-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "lesson03.super_calculator_v2"}]}